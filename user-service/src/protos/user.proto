syntax = "proto3";


import "google/protobuf/struct.proto";

package userService;

service UserService {
  rpc Ping (Empty) returns (PingResponse) {}
  rpc GetUserProfile (UserRequest) returns (UserProfile);
  rpc GetUserSportCategories (UserRequest) returns (SportCategoriesList);
  rpc CreateUser (CreateUserRequest) returns (UserResponse);
  rpc UpdateUserTeams (UpdateTeamsRequest) returns (UserResponse);
  rpc UpgradeMembership (UpgradeMembershipRequest) returns (UpgradeMembershipResponse);
  rpc GetAllUsers (Empty) returns (UsersList);
  rpc GetAllTeams (Empty) returns (TeamsList) {};
  rpc CheckUserExists (UserRequest) returns (UserExistsResponse) {};
  rpc UpdateUserProfile (UpdateUserProfileRequest) returns (UserResponse);
  rpc DeleteUser (DeleteUserRequest) returns (StatusResponse);
  rpc UpdateSportCategoryPreferences (UpdateSportCategoryRequest) returns (UserResponse);
  rpc GetSportCategoryHierarchy (SportCategoryRequest) returns (SportCategoryHierarchyResponse);
  rpc LinkPaymentToUser (LinkPaymentRequest) returns (StatusResponse);
  rpc AssignGestionnaireRole (AssignRoleRequest) returns (StatusResponse);
  rpc AssignAdminRole (UserRequest) returns (StatusResponse);
}

message UserRequest {
  string userId = 1;
}

message UsersList {
  repeated UserProfile users = 1;
}

message UserExistsResponse {
  bool exists = 1;
}

message UserProfile {
  string id = 1;
  string username = 2;
  string email = 3;
  string role = 4;
  string membershipStatus = 5;
  string membershipBadge = 6;
  repeated string selectedTeamIds = 7;
  repeated string selectedSports = 8;
}





message SportCategoriesList {
  repeated SportCategory categories = 1;
}

message SportCategory {
  string id = 1;
  string name = 2;
  string description = 3;
  string path = 4;
}

message CreateUserRequest {
  string username = 1;
  string email = 2;
  string password = 3;
  repeated string selectedTeamIds = 4;
  NotificationPreferences notificationPreferences = 5;
}

message NotificationPreferences {
  bool email = 1;
  bool sms = 2;
}

message UpdateTeamsRequest {
  string userId = 1;
  repeated string teamIds = 2;
}

message UserResponse {
  string status = 1;
  string message = 2;
  UserProfile user = 3;
}

message UpgradeMembershipRequest {
  string userId = 1;
  string duration = 2;  // Monthly or Yearly
  double price = 3;
  string token = 4;
}

message UpgradeMembershipResponse {
  string status = 1;
  string message = 2;
  SubscriptionPlan subscriptionPlan = 3;
}

message SubscriptionPlan {
  double price = 1;
  string duration = 2;
  string startDate = 3;
  string endDate = 4;
  bool isActive = 5;
}

message Empty {}

message PingResponse {
  string message = 1;
}
message TeamsList {
  repeated Team teams = 1;
}

message Team {
  string id = 1;
  string name = 2;
  SportCategory sportCategory = 3;  // Changed from string sportCategoryId
  string location = 4;
}







// message UserExistsResponse {
//   bool exists = 1;
// }

// New messages for the added methods
message UpdateUserProfileRequest {
  string userId = 1;
  string username = 2;
  string email = 3;
  NotificationPreferences notificationPreferences = 4;
}

message DeleteUserRequest {
  string userId = 1;
  string authenticatedUserId = 2;
  bool isAdmin = 3;
}

message StatusResponse {
  string status = 1;
  string message = 2;
}

message UpdateSportCategoryRequest {
  string userId = 1;
  repeated string sportCategoryIds = 2;
}

message SportCategoryRequest {
  string sportCategoryId = 1;
}

message SportCategoryHierarchyResponse {
  string status = 1;
  SportCategoryHierarchy hierarchy = 2;
}

message SportCategoryHierarchy {
  string id = 1;
  string name = 2;
  string description = 3;
  string parentCategoryId = 4;  // Add this to match MongoDB schema
  string path = 5;
  string createdAt = 6;         // Add timestamp fields
  string updatedAt = 7;
  int32 version = 8;            // Add __v as version
  repeated SportCategoryHierarchy subCategories = 9;
}

message LinkPaymentRequest {
  string userId = 1;
  string paymentId = 2;
  string abonnementId = 3;
}

message AssignRoleRequest {
  string userId = 1;
  string teamId = 2;
}